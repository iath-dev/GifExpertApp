{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetch.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","category","setCategory","onSubmit","event","preventDefault","trim","cts","placeholder","value","type","onChange","target","GifGridItem","url","title","id","className","src","alt","GifGrid","uri","params","callback","data","loading","state","setState","useEffect","a","param","Object","entries","map","key","join","fetch","resp","json","getData","useFetch","q","encodeURI","limit","api_key","images","downsized","img","GifExpertApp","React","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEPC,mBAAS,IAFF,mBAEhCC,EAFgC,KAEtBC,EAFsB,KAavC,OACI,0BAAMC,SAVW,SAAAC,GAGjB,GAFAA,EAAMC,iBAEkB,KAApBJ,EAASK,OAAe,OAAO,KAEnCP,GAAc,SAAAQ,GAAG,OAAKN,GAAL,mBAAkBM,OACnCL,EAAY,MAKR,2BACIM,YAAY,uBACZC,MAAOR,EACPS,KAAK,OACLC,SAAU,SAAAP,GAAK,OAAIF,EAAYE,EAAMQ,OAAOH,Y,uBCpB/CI,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,MAAgB,EAATC,GACtC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKJ,EAAKK,IAAKJ,IACpB,2BAAIA,KCDHK,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDjB,SAAC,GAAgD,IAA9CoB,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,OAAUC,EAA8B,uDAAnB,SAACC,GAAD,OAAUA,GAAS,EAC1CxB,mBAAS,CAC/BwB,KAAM,KACNC,SAAS,IAHuD,mBAC7DC,EAD6D,KACtDC,EADsD,KAwBpE,OAlBAC,qBAAU,YACO,uCAAG,oCAAAC,EAAA,6DACNC,EAAQC,OAAOC,QAAQV,GAAQW,KAAI,mCAAEC,EAAF,KAAOzB,EAAP,qBAAqByB,EAArB,YAA4BzB,MAAS0B,KAAK,KAE7ErB,EAHM,UAGGO,EAHH,YAGUS,GAHV,SAKOM,MAAMtB,GALb,cAKNuB,EALM,gBAMWA,EAAKC,OANhB,gBAMJd,EANI,EAMJA,KAERG,EAAS,CACLH,KAAMD,EAASC,GACfC,SAAS,IAVD,4CAAH,qDAcbc,KACD,CAACjB,EAAQD,EAAKE,IAEVG,EDrB2Bc,CAAS,CACvCnB,IAAK,uCACLC,OAAQ,CACJmB,EAAGC,UAAUzC,GACb0C,MAAO,GACPC,QAAS,sCAEd,SAACpB,GAAD,OAAUA,EAAKS,KAAI,kBAAoD,CAAEjB,GAAtD,EAAGA,GAAuDD,MAA1D,EAAOA,MAA0DD,IAAjE,EAAc+B,OAAUC,UAAahC,WAPnDW,EAF6B,EAE7BA,QAAeoB,EAFc,EAEpBrB,KASjB,OACI,oCACI,wBAAIP,UAAU,qCAAqChB,GAClDwB,EACG,uBAAGR,UAAU,oCAAb,eAEA,yBAAKA,UAAU,aACV4B,EAAOZ,KAAI,SAAAc,GAAG,OACX,kBAAC,EAAD,eAAab,IAAKa,EAAI/B,IAAQ+B,UEAvCC,EApBM,WAAO,IAAD,EAEeC,IAAMjD,SAAS,CAAC,YAF/B,mBAEfkD,EAFe,KAEHnD,EAFG,KAIvB,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,6BACKmD,EAAWjB,KAAI,SAAAkB,GAAG,OACf,kBAAC,EAAD,CAASjB,IAAKiB,EAAKlD,SAAUkD,U,MCXjDC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6a32b44f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [category, setCategory] = useState('')\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        if (category.trim() === '') return null\r\n\r\n        setCategories(cts => [category, ...cts])\r\n        setCategory('')\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                placeholder=\"Tip the new category\"\r\n                value={category}\r\n                type=\"text\"\r\n                onChange={event => setCategory(event.target.value)}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n \r\nexport default AddCategory;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ url, title, id }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { getGif } from '../helpers/getGifs';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { loading, data: images } = useFetch({\r\n        uri: 'https://api.giphy.com/v1/gifs/search',\r\n        params: {\r\n            q: encodeURI(category),\r\n            limit: 24,\r\n            api_key: 'xKFGyG3jUVKXZ0AMbVlsdy8XjCk7fgmk'\r\n        }\r\n    }, (data) => data.map(({ id, title, images: { downsized: { url } } }) => ({ id, title, url })))\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading ? (\r\n                <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n            ): (\r\n                <div className=\"card-grid\">\r\n                    {images.map(img => (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {/*\r\n            */}\r\n        </>\r\n    )\r\n}\r\n","// import React from 'react'\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = ({ uri, params }, callback = (data) => data) => {\r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const param = Object.entries(params).map(([key, value]) => `${key}=${value}`).join('&')\r\n\r\n            const url = `${uri}?${param}`\r\n\r\n            const resp = await fetch(url)\r\n            const { data } = await resp.json()\r\n\r\n            setState({\r\n                data: callback(data),\r\n                loading: false\r\n            })\r\n        }\r\n\r\n        getData()\r\n    }, [params, uri, callback])\r\n\r\n    return state;\r\n}\r\n","import React from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [ categories, setCategories ] = React.useState(['Simpson'])\r\n\r\n    return ( \r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <div>\r\n                {categories.map(cat => (\r\n                    <GifGrid key={cat} category={cat} />\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}